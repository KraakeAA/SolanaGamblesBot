// services/database/operations.js
import { pool, config } from '../../config/index.js';
import { getWalletFromCache, setWalletCache } from '../../utils/state.js';
import { validateOriginalMemoFormat } from '../solana/utils.js'; // Import necessary utils

const FEE_BUFFER = config.FEE_MARGIN; // Get fee buffer from central config

export async function savePendingBet(userId, chatId, gameType, details, lamports, memoId, expiresAt, priority = 0) {
    // ... (copy function content)
     if (!validateOriginalMemoFormat(memoId)) { /* ... */ } // Ensure validate fn is imported
     const query = ` /* ... */ `;
     const values = [ /* ... */ ];
     try {
         const res = await pool.query(query, values);
         // ...
         return { success: true, id: res.rows[0].id };
     } catch (err) {
        // ...
        return { success: false, error: err.message };
     }
}

export async function findBetByMemo(memoId) {
    // ... (copy function content)
     const query = ` /* ... */ `;
     try {
        // ...
     } catch (err) { /* ... */ }
}

export async function markBetPaid(betId, signature) {
    // ... (copy function content)
    const query = ` /* ... */ `;
     try {
         // ...
     } catch (err) { /* ... */ }
}

export async function linkUserWallet(userId, walletAddress) {
    // Check cache update logic relies on imported state functions
    const walletFromCache = getWalletFromCache(userId); // Example check (original didn't use cache here, but should)
    // ... (copy function content)
    const query = ` /* ... */ `;
    try {
        // ...
         if (linkedWallet) {
             setWalletCache(userId, linkedWallet); // Update cache
             // ...
         }
         // ...
    } catch (err) { /* ... */ }
}

export async function getLinkedWallet(userId) {
    // Uses cache functions from state.js
    const cachedWallet = getWalletFromCache(userId);
    if (cachedWallet) return cachedWallet;

    // ... (copy function content for DB query)
    const query = ` /* ... */ `;
     try {
         // ...
         if (wallet) {
             setWalletCache(userId, wallet); // Update cache on miss
         }
         // ...
    } catch (err) { /* ... */ }
}

export async function updateBetStatus(betId, status) {
    // ... (copy function content)
}

export async function recordPayout(betId, status, signature) {
    // ... (copy function content)
}

// Add any other DB interaction functions here
